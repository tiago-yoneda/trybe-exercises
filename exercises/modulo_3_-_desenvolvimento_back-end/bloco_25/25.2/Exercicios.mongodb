// Exercício 1 : Utilize uma combinação das expressões aritméticas e adicione um campo chamado idade à coleção clientes . Algumas dicas:
// arredonde para baixo o valor da idade;
// calcule a idade usando a diferença entre a data corrente e a data de nascimento;
// 1 dia é igual a 86400000 milissegundos.
use("erp");
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [{ $subtract: [new Date(), "$dataNascimento"] }, 365.25*24*60*60*1000 ]
        }
      }
    }
  },
  {
    $project: {
      _id: 0,
      nome: 1,
      idade: 1
    }
  }
]);

// Exercício 2 : Utilizando o novo campo idade , conte quantos clientes têm entre 18 e 25 anos.
use("erp");
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [{ $subtract: [new Date(), "$dataNascimento"] }, 365.25*24*60*60*1000 ]
        }
      }
    }
  },
  {
    $match: {
      idade: { $gt: 18, $lt: 25}
    }
  },
  {
    $count: "totalDeClientes"
  }
]);

// Exercício 3 : Remova os estágios $count e $match do exercício anterior e adicione um estágio no pipeline que coloque as compras do cliente no campo compras .
use("erp");
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [{ $subtract: [new Date(), "$dataNascimento"] }, 365.25*24*60*60*1000 ]
        }
      }
    }
  },
  {
    $lookup: {
      from: "vendas",
      let: { clienteId: "$clienteId" },
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ["$clienteId", "$$clienteId"]
            }
          }
        },
        {
          $project: {
            _id: 0,
            clienteId: 0,
          }
        }
      ],
      as: "comprasCliente"
    }
  },
  {
    $project: {
      _id: 0,
      clienteId: 0,
    }
  }
]);


// Exercício 4 : Selecione TODOS os clientes que compraram entre Junho de 2019 e Março de 2020 .
use("erp");
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [{ $subtract: [new Date(), "$dataNascimento"] }, 365.25*24*60*60*1000 ]
        }
      }
    }
  },
  {
    $lookup: {
      from: "vendas",
      let: { clienteId: "$clienteId" },
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ["$clienteId", "$$clienteId"]
            }
          }
        },
        {
          $project: {
            _id: 0,
            clienteId: 0,
          }
        }
      ],
      as: "comprasCliente"
    }
  },
  {
    $match: {
      "comprasCliente.dataVenda": {
        $gte: ISODate('2019-06-01'),
        $lte: ISODate('2020-03-31')
      }
    }
  },
  {
    $project: {
      _id: 0,
      clienteId: 0,
    }
  },
]);
// Exercício 5 : Confira o número de documentos retornados pelo pipeline com o método itcount() . Até aqui, você deve ter 486 documentos sendo retornados.
use("erp");
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [{ $subtract: [new Date(), "$dataNascimento"] }, 365.25*24*60*60*1000 ]
        }
      }
    }
  },
  {
    $lookup: {
      from: "vendas",
      let: { clienteId: "$clienteId" },
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ["$clienteId", "$$clienteId"]
            }
          }
        },
        {
          $project: {
            _id: 0,
            clienteId: 0,
          }
        }
      ],
      as: "comprasCliente"
    }
  },
  {
    $match: {
      "comprasCliente.dataVenda": {
        $gte: ISODate('2019-06-01'),
        $lte: ISODate('2020-03-31')
      }
    }
  },
  {
    $project: {
      _id: 0,
      clienteId: 0,
    }
  },
  { $count: "totalClientes"}
]);
// Exercício 6 : Ainda nesse pipeline , descubra os 5 estados com mais compras.
use("erp");
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [{ $subtract: [new Date(), "$dataNascimento"] }, 365.25*24*60*60*1000 ]
        }
      }
    }
  },
  {
    $lookup: {
      from: "vendas",
      let: { clienteId: "$clienteId" },
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ["$clienteId", "$$clienteId"]
            }
          }
        },
        {
          $project: {
            _id: 0,
            clienteId: 0,
          }
        }
      ],
      as: "comprasCliente"
    }
  },
  {
    $match: {
      "comprasCliente.dataVenda": {
        $gte: ISODate('2019-06-01'),
        $lte: ISODate('2020-03-31')
      }
    }
  },
  {
    $addFields: {
      totalDeCompras: {
        $size: "$comprasCliente"
      }
    }
  },
  {
    $group: {
      _id: "$endereco.uf",
      quantidadeDeCompras: {
        $sum: '$totalDeCompras'
      }
    }
  },
  {
    $sort: { "quantidadeDeCompras": -1 }
  },
  { $limit: 5 }
]);


// // Exercício 7 : Descubra o cliente que mais consumiu QUEIJO PRATO . Retorne um documento com a seguinte estrutura:
// {
//   "nomeCliente": "NOME",
//   "uf": "UF DO CLIENTE",
//   "totalConsumido": 100
// }
use("erp");
db.vendas.aggregate([
  {
    $match: {
      "itens.nome": "QUEIJO PRATO"
    }
  },
  { $unwind: "$itens"},
  {
    $match: {
      "itens.nome": "QUEIJO PRATO"
    }
  },
  {
    $group: {
      _id: "$clienteId",
      quantidadeDeQueijo: { $sum: "$itens.quantidade"}
    }
  },
  {
    $sort: { "quantidadeDeQueijo": -1 }
  },
  {
    $limit: 1
  },
  {
    $lookup: {
      from: "clientes",
      localField: "_id",
      foreignField: "clienteId",
      as: "cliente"
    }
  },
  { $unwind: "$cliente"},
  {
    $project: {
      _id: 0,
      nomeCliente: "$cliente.nome",
      uf: "$cliente.endereco.uf",
      totalConsumido: "$quantidadeDeQueijo"
    }
  }
]);
// Exercício 8 : Selecione todas as vendas do mês de Março de 2020 , com status EM SEPARACAO . Acrescente um campo chamado dataEntregaPrevista com valor igual a três dias após a data da venda. Retorne apenas os campos clienteId , dataVenda e dataEntregaPrevista .
use("erp");
db.vendas.aggregate([
  {
    $match: {
      status: "EM SEPARACAO",
      dataVenda: {
        $gte: ISODate("2020-03-01"),
        $lte: ISODate("2020-03-31"),
      }
    }
  },
  {
    $addFields: {
      dataEntregaPrevista: {
        $add: ["$dataVenda", 3*24*60*60*1000]
      }
    }
  },
  {
    $project:{
      _id: 0,
      clienteId: 1,
      dataVenda: 1,
      dataEntregaPrevista: 1
    }
  }
]);
